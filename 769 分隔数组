769. Max Chunks To Make Sorted (Medium)
Example 1:
Input: arr = [4,3,2,1,0]
Output: 1
Explanation:
Splitting into two or more chunks will not return the required result.
For example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.
Example 2:
Input: arr = [1,0,2,3,4]
Output: 4
Explanation:
We can split into two chunks, such as [1, 0], [2, 3, 4].
However, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.
题目描述：分隔数组，使得对每部分排序后数组就为有序。

解题思路：由于数组的值为0~n-1，因此当前遍历过的元素的最大值在排序后应该与角标相等，满足这个条件当前遍历过的元素就可以排列为有序，计数加一
public int maxChunksToSorted(int[] arr) {
        int ans = 0;
        int right = arr[0];
        for(int i = 0;i<arr.length;i++){
            right = Math.max(right,arr[i]);
            if(right==i)
                ans++;
        }
        return ans;
    }
