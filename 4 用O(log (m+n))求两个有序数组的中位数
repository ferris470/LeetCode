nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

解题思路：二分
选取两个数组的cut 方式，分别有2n+1和2m+1种，角标从0开始，保证cut1+cut2==n+m才能保证求得的数字为中位数
public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        if(n1<n2)
            return findMedianSortedArrays(nums2,nums1);
        int l = 0,r = 2*n2;
        while(l<=r){
            int mid2 = l+(r-l)/2;
            int mid1 = n1+n2-mid2;
            double L1 = (mid1==0?Integer.MIN_VALUE:nums1[(mid1-1)/2]);
            double L2 = (mid2==0?Integer.MIN_VALUE:nums2[(mid2-1)/2]);
            double R1 = (mid1==2*n1?Integer.MAX_VALUE:nums1[mid1/2]);
            double R2 = (mid2==2*n2?Integer.MAX_VALUE:nums2[mid2/2]);
            if(L1>R2)
                l = mid2+1;
            else if(L2>R1)
                r = mid2-1;
            else
                return (Math.max(L1,L2)+Math.min(R1,R2))/2;
        }
        return -1;
    }
