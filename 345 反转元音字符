345. Reverse Vowels of a String (Easy)
Example 1:
Input: "hello"
Output: "holle"
Example 2:
Input: "leetcode"
Output: "leotcede"

解题思路：用数组记录下元音字母出现的下标，然后交换字符，可以用set或者String的contains方法来判断元音字母
public String reverseVowels(String s) {
        char[] c = s.toCharArray();
        Set<Character> vowel = new HashSet<Character>();
        vowel.add('a');
        vowel.add('e');
        vowel.add('i');
        vowel.add('o');
        vowel.add('u');
        vowel.add('A');
        vowel.add('E');
        vowel.add('I');
        vowel.add('O');
        vowel.add('U');
        List<Integer> index = new ArrayList<Integer>();
        for(int i = 0;i<s.length();i++){
            if(vowel.contains(s.charAt(i)))
                index.add(i);
        }
        int i = 0,j = index.size()-1;
        while(i<j){
            char temp = c[index.get(i)];
            c[index.get(i)] = c[index.get(j)];
            c[index.get(j)] = temp;
            i++;
            j--;
        }
        return new String(c);
    }
    
方法改进：用one pass方法来求解，在while循环中添加while循环来找到最左边和最右边的元音字母
public String reverseVowels(String s) {
        char[] c = s.toCharArray();
        Set<Character> vowel = new HashSet<Character>();
        vowel.add('a');
        vowel.add('e');
        vowel.add('i');
        vowel.add('o');
        vowel.add('u');
        vowel.add('A');
        vowel.add('E');
        vowel.add('I');
        vowel.add('O');
        vowel.add('U');
        int i = 0,j = s.length()-1;
        while(i<j){
            while(i<j&&!vowel.contains(s.charAt(i)))
                i++;
            while(i<j&&!vowel.contains(s.charAt(j)))
                j--;
            char temp = c[i];
            c[i] = c[j];
            c[j] = temp;
            i++;
            j--;
        }
        return new String(c);
    }
