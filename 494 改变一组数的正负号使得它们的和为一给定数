494. Target Sum (Medium)
Input: nums is [1, 1, 1, 1, 1], S is 3.
Output: 5
Explanation:

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.
该问题可以转换为 Subset Sum 问题，从而使用 0-1 背包的方法来求解。
可以将这组数看成两部分，P 和 N，其中 P 使用正号，N 使用负号，有以下推导：
                  sum(P) - sum(N) = target
sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)
                       2 * sum(P) = target + sum(nums)
因此只要找到一个子集，令它们都取正号，并且和等于 (target + sum(nums))/2，就证明存在解。

public int findTargetSumWays(int[] nums,int S)
	{
        int sum = 0;
        for(int num:nums)
            sum+=num;
        int target = sum+S;
        if(sum<S||(target&1)==1)
            return 0;
        target = target/2;
        int[][] dp = new int[nums.length+1][target+1];
        dp[0][0] = 1;
        for(int i = 1;i<=nums.length;i++){
            for(int j = 0;j<=target;j++){
                if(j<nums[i-1])
                    dp[i][j] = dp[i-1][j];
                else
                    dp[i][j] = dp[i-1][j]+dp[i-1][j-nums[i-1]];
            }
        }
        return dp[nums.length][target];
    }
