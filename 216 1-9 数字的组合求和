216. Combination Sum III (Medium)
Input: k = 3, n = 9
Output:
[[1,2,6], [1,3,5], [2,3,4]]
从 1-9 数字中选出 k 个数不重复的数，使得它们的和为 n。

class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        dfs(k,n,ans,new ArrayList<Integer>(),1);
        return ans;
	}
    public void dfs(int k,int n,List<List<Integer>> ans,List<Integer> list,int start){
        if(n<=0||list.size()==k){
            if(n==0&&list.size()==k)
                ans.add(new ArrayList<Integer>(list));
            return;
        }
        for(int i = start;i<10;i++){
            list.add(i);
            dfs(k,n-i,ans,list,i+1);
            list.remove(list.size()-1);
        }
    }
}
