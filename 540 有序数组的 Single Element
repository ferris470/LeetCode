540. Single Element in a Sorted Array (Medium)
Input: [1, 1, 2, 3, 3, 4, 4, 8, 8]
Output: 2
题目描述：一个有序数组只有一个数不出现两次，找出这个数。要求以 O(logN) 时间复杂度进行求解

解题思路：如果m是偶数，并且nums[m]==num[m+1]，那么独数出现在后半段，令l = m+2，否则出现在前半段，令h = m
public int singleNonDuplicate(int[] nums) {
        int l = 0,r = nums.length-1;
        while(l<r){
            int mid = l+(r-l)/2;
            if((mid&1)==1){
                mid = mid-1;
            }
            if(nums[mid]==nums[mid+1])
                l = mid+2;
            else
                r = mid;
                
        }
        return nums[l];
    }
