210. Course Schedule II (Medium)
4, [[1,0],[2,0],[3,1],[3,2]]
There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. 
Both courses 1 and 2 should be taken after you finished course 0.
So one correct course order is [0,1,2,3]. Another correct ordering is[0,2,1,3].

解题思路：使用BFS，先用数组记录下上每堂课的先决课程数目，项队列中加入不需要先决课程就可以上的课，然后遍历这些课程，
把以这些课程为先决条件的课程的先决条件减一，知道没有先决课程数，就添加到队列中
public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] ans = new int[numCourses];
        List<Integer>[] graph = new List[numCourses];
        for(int i = 0;i<graph.length;i++){
            graph[i] = new ArrayList<Integer>();
        }
        int[] degree = new int[numCourses];
        for(int[] pre:prerequisites){
            degree[pre[0]]++;
            graph[pre[1]].add(pre[0]);
        }
        Queue<Integer> queue = new LinkedList<Integer>();
        for(int i = 0;i<numCourses;i++){
            if(degree[i]==0)
                queue.add(i);
        }
        int visit = 0;
        while(!queue.isEmpty()){
            int from = queue.poll();
            ans[visit++] = from;
            for(int to:graph[from]){
                degree[to]--;
                if(degree[to]==0)
                    queue.add(to);
            }
        }
        return visit==numCourses?ans:new int[0];
    }
