697. Degree of an Array (Easy)
Input: [1,2,2,3,1,4,2]
Output: 6
题目描述：数组的度定义为元素出现的最高频率，例如上面的数组度为 3。要求找到一个最小的子数组，这个子数组的度和原数组一样。

解题思路：用map记录每个元素出现次数，找到度对应元素的头尾的Index
public int findShortestSubArray(int[] nums) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        int degree = 0;
        for(int i = 0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
            degree = Math.max(degree,map.get(nums[i]));
        }
        int ans = nums.length;
        for(int key:map.keySet()){
            if(map.get(key)==degree){
                int l = 0,r = nums.length-1;
                for(int i = 0;i<nums.length;i++){
                    if(nums[i]==key){
                        l = i;
                        break;
                    }
                }
                for(int i = nums.length-1;i>=0;i--){
                    if(nums[i]==key){
                        r = i;
                        break;
                    }
                }
                ans = Math.min(ans,r-l+1);
            }
        }
        return ans;
    }
